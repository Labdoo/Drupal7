<?php

/**
 * @defgroup labdooblocksview LabdooBlocksView Labdoo Blocks and Views 
 *
 * This module implements all the Labdoo blocks and views 
 *
 */


/**
 * @file
 * Main module file for the Labdoo Blocks and Views module 
 *
 * @ingroup labdooblocksview
 *
 */


/*
 * ==========
 * VIEWS CODE
 * ==========
 */

/**
 * Implementation of hook_views_api
 */
function lbd_blocks_views_views_api() {
  return array(
    'api' => 3.0,
  );
} 


/**
 * Implementation of hook_views_default_views
 */
function lbd_blocks_views_views_default_views() {

  // Global inventory view
  include 'lbd_blocks_views_global_inventory.inc';
  $views[$view->name] = $view;

  // Global inventory view
  include 'lbd_blocks_views_labdooers.inc';
  $views[$view->name] = $view;

  // Actions feed view
  include 'lbd_blocks_views_actions.inc';
  $views[$view->name] = $view;

  // Slider dashboard view
  include 'lbd_blocks_views_slider_dashboard.inc';
  $views[$view->name] = $view;

  // Newsletters view
  include 'lbd_blocks_views_newsletters.inc';
  $views[$view->name] = $view;

  // Superhub view 
  include 'lbd_blocks_views_superhub_pages.inc';
  $views[$view->name] = $view;

  return $views;
}


/*
 * ==========
 * BLOCKS CODE
 * ==========
 */

/**
 * Implementation of hook_block_info 
 */
function lbd_blocks_views_block_info() {

  // Geolocation map for nodes
  $blocks['block_geolocation_map_node'] = array(
    'info' => "Geolocation map for nodes",
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'weight' => -90,
    'pages' => "
<?php
  \$match = FALSE;
  \$types = array('laptop' => 1,'dootrip' => 1,'hub' => 1, 'edoovillage' => 1) ;

  if(arg(2) != \"\") //  Display only in node view mode
    return FALSE;

  if ((arg(0) == 'node') && is_numeric(arg(1))) {
    \$node = node_load(arg(1));
    \$match = isset(\$types[\$node->type]);
  }

  return \$match;
?>
               ",
    'region' => "content",
  );

  // Dooject header
  $blocks['block_dooject_header'] = array(
    'info' => "The header of a dooject",
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'weight' => -100,
    'pages' => "
<?php
  \$match = FALSE;
  \$types = array('laptop' => 1) ;

  if(arg(2) != \"\") //  Display only in node view mode
    return FALSE;

  if ((arg(0) == 'node') && is_numeric(arg(1))) {
    \$node = node_load(arg(1));
    \$match = isset(\$types[\$node->type]);
  }

  return \$match;
?>
               ",
    'region' => "content",
  );

  // Edoovillage header
  $blocks['block_edoovillage_header'] = array(
    'info' => "The header of an edoovillage",
    'cache' => DRUPAL_NO_CACHE,
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'weight' => -100,
    'pages' => "
<?php
  \$path = drupal_get_path_alias(current_path());
  if(\$path == \"edoovillage\")
    return TRUE;
  else
    return FALSE;
?>
               ",
    'region' => "content",
  );

  // Hub header
  $blocks['block_hub_header'] = array(
    'info' => "The header of a hub",
    'cache' => DRUPAL_NO_CACHE,
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'weight' => -100,
    'pages' => "
<?php
  \$path = drupal_get_path_alias(current_path());
  if(\$path == \"hub\")
    return TRUE;
  else
    return FALSE;
?>
               ",
    'region' => "content",
  );

  // Photo album header
  $blocks['block_photo_album_header'] = array(
    'info' => "The header of a photo album",
    'cache' => DRUPAL_NO_CACHE,
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'weight' => -100,
    'pages' => "
<?php
  \$match = FALSE;
  \$types = array('node_gallery_gallery' => 1) ;

  if ((arg(0) == 'node') && is_numeric(arg(1))) {
    \$node = node_load(arg(1));
    if(!node_is_page(\$node)) // Display only in node view mode
      return FALSE;
    \$match = isset(\$types[\$node->type]);
  }

  return \$match;
?>
               ",
    'region' => "content",
  );

  // Macro statistics block (vertical)
  $blocks['block_macro_statistics_vertical'] = array(
    'info' => "Macro statistics block (vertical)",
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'weight' => -100,
    'pages' => "<?php return labdoo_block_filter_sidebar_second(); ?>",
    'region' => "sidebar_second",
  );

  // Macro statistics block (horizontal)
  $blocks['block_macro_statistics_horiz'] = array(
    'info' => "Macro statistics block (horizontal)",
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'weight' => -100,
    'pages' => "<?php return labdoo_block_filter_header(); ?>",
    'region' => "header",
  );

  // Block linking to the language switcher dropdown block
  $blocks['block_link_language_switch'] = array(
    'info' => "Language switch (link to language switcher dropdown block)",
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'weight' => -50,
    'pages' => "<?php return labdoo_block_filter_sidebar_second(); ?>",
    'region' => "sidebar_second",
  );

  // Block linking to the actions feed block
  $blocks['block_link_actions_feed'] = array(
    'info' => "Actions feed (link to actions feed block)",
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'weight' => -60,
    'pages' => "<?php return labdoo_block_filter_sidebar_second(); ?>",
    'region' => "sidebar_second",
  );

  // Block linking to the team's content block
  $blocks['block_link_team_content'] = array(
    'info' => "Team content (link to the team content block)",
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'weight' => 10,
    'pages' => "",  // Page visibility gets handled by the block itself
    'region' => "sidebar_second",
  );

  // Block linking to the team's actions block
  $blocks['block_team_actions'] = array(
    'info' => "Team actions",
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'weight' => 0,
    'pages' => "<?php return labdoo_block_filter_team_actions(); ?>",
    'region' => "sidebar_second",
  );

  // Block linking to the team's actions block
  $blocks['block_footer'] = array(
    'info' => "Labdoo footer",
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'weight' => 0,
    'pages' => "",
    'region' => "footer",
  );

  return $blocks;
}


/**
 * Implementation of hook_block_view 
 */
function lbd_blocks_views_block_view($delta = '') {
  $block = array();

  switch ($delta) {

    // Geolocation map for nodes
    case 'block_geolocation_map_node':
      $block['subject'] = "<none>";
      $block['content'] = array(
             '#markup' => labdoo_render_map_geolocate_node(),
      );
      break;

    // Dooject header
    case 'block_dooject_header':
      $block['subject'] = "<none>";
      $block['content'] = array(
             '#markup' => labdoo_render_dooject_header(),
      );
      break;

    // Edoovillage header
    case 'block_edoovillage_header':
      if(!empty($_GET['e'])) 
        $blockContent = labdoo_render_edoovillage_hub_header($_GET['e'], "edoovillage");
      else
        $blockContent = "";
      $block['subject'] = "<none>";
      $block['content'] = array(
             '#markup' => $blockContent,
      );
      break;

    // Hub header
    case 'block_hub_header':
      if(!empty($_GET['h'])) 
        $blockContent = labdoo_render_edoovillage_hub_header($_GET['h'], "hub");
      else
        $blockContent = "";
      $block['subject'] = "<none>";
      $block['content'] = array(
             '#markup' => $blockContent,
      );
      break;

    // Hub header
    case 'block_photo_album_header':
      $block['subject'] = "<none>";
      $block['content'] = array(
             '#markup' => labdoo_render_photo_album_header(),
      );
      break;

    // Macro statistics (vertical) 
    case 'block_macro_statistics_vertical':
      $block['subject'] = "<none>";
      $block['title'] = t("Global progress");
      $block['content'] = array(
             '#markup' => labdoo_render_macro_stats("vertical"),
      );
      break;

    // Macro statistics (horizontal)
    case 'block_macro_statistics_horiz':
      $block['subject'] = "<none>";
//      $block['title'] = t("Global progress");
      $block['content'] = array(
             '#markup' => labdoo_render_macro_stats("horizontal"),
      );
      break;

    // Language switch
    case 'block_link_language_switch':
      $blockLanguage = module_invoke('lang_dropdown', 'block_view', 'language');
      $block['subject'] = "<none>";
      $block['content'] = drupal_render($blockLanguage["content"]);
      break;

    // Actions feed 
    case 'block_link_actions_feed':
      $blockActions = module_invoke('views', 'block_view', 'actions-block');
      $block['subject'] = "<none>";
      $block['title'] = t("Current mini-missions");
      $block['content'] = drupal_render($blockActions["content"]);
      break;

    // Team content 
    case 'block_link_team_content':
      $blockTeamContent = module_invoke('views', 'block_view', 'team_content-block_1');
      $block['subject'] = "<none>";
      $block['title'] = t("Team's latest activities");
      $block['content'] = drupal_render($blockTeamContent["content"]);
      break;

    // Team actions 
    case 'block_team_actions':
      $block['subject'] = "<none>";
//      $block['title'] = t("Available actions");
      $block['content'] = labdoo_render_team_actions();
      break;

    // The Labdoo footer 
    case 'block_footer':
      $block['subject'] = "<none>";
      $block['content'] = array(
             '#markup' => labdoo_render_footer(),
      );
      break;

  }

  return $block;
}


/*
 * Implementation of hook_views_pre_render 
 *
 */
function lbd_blocks_views_views_pre_render(&$view) {
  if ($view->name == 'slider_dashboard' && $view->current_display == 'page') {
    if(!empty($_GET['e'] && is_numeric($_GET['e']))) {
      $node = node_load($_GET['e']); 
      if($node && $node->type == "edoovillage") {
        $view->build_info['title'] = $node->title;
        return;
      }
    }
    $view->build_info['title'] = "Page not found: please select a valid edoovillage";
  }
  if ($view->name == 'slider_dashboard' && $view->current_display == 'page_1') {
    if(!empty($_GET['h'] && is_numeric($_GET['h']))) {
      $node = node_load($_GET['h']); 
      if($node && $node->type == "hub") {
        $view->build_info['title'] = $node->title;
        return;
      }
    }
    $view->build_info['title'] = "Page not found: please select a valid hub";
  }
  return;
}
