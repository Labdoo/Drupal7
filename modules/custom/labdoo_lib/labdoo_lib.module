<?php

/**
 * @defgroup labdoolib LabdooLib: Set of core APIs and library functions exposed by Labdoo
 *
 * This module is Labdoo's "Swiss Army Knife" providing the general core functionality
 * and exposing general Labdoo APIs that are not specific to any other more specialized module
 *
 */


/**
 * @file
 * Main file for the Labdoo Library module
 *
 * @ingroup labdoolib 
 */


/**
 * Implementation of hook_node_insert  
 *
 */
function labdoo_lib_node_insert($node) {

  if($node->type == 'laptop') {
    /*
     * The Labdoo identifier of each
     * laptop is stored as the node's title
     */
    $loadedNode = node_load($node->nid);

    // The ID of this laptop is equal to the 
    // current number of laptops in the database
    // TODO: global lock for the counter
    $query = "SELECT COUNT(*) FROM node laptop WHERE (type='laptop' AND vid=(SELECT MAX(vid) FROM node WHERE nid=laptop.nid))";
    $numLaptops = db_query($query)->fetchField();
    $loadedNode->title = sprintf("%09d", intval($numLaptops));

    // Add laptop path alias for 1.0 compatibility.
    // There are basically two ways to access a laptop:
    // via laptop/$ID or content/$ID
    $path = 'laptop/' . $loadedNode->title;
    $node->path = array('alias' => $path);

    node_save($loadedNode);
  }

  if($node->type == 'dootrip') {
    /*
     * Dootrip's title is automatically generated
     */
    $loadedNode = node_load($node->nid);
    $loadedNode->title = "Dootrip from X to Y (temporary title)";
    node_save($loadedNode);
  }

  if($node->type == 'edoovillage') {
    /*
     * Edoovillage's title is automatically generated
     */
    $countryNames = location_get_iso3166_list();
    $nodeCountry = $countryNames[$node->locations[0]['country']];
    $nodeCity = $node->locations[0]['city'];

    $loadedNode = node_load($node->nid);
    $loadedNode->title = $nodeCountry . ", " . $nodeCity . ": " . $loadedNode->field_project_summary['und'][0]['value'];
    node_save($loadedNode);
  }

//  if($node->type == 'hub') {
//    /*
//     * Hub's title is automatically generated
//     */
//    $loadedNode = node_load($node->nid);
//    $loadedNode->title = "Labdoo Hub name (temporary title)";
//    node_save($loadedNode);
//  }

}


/**
 * _update_laptop_location_from_edoovillage
 *
 * Updates the location of a laptop to match that of its 
 * assigned edoovillage
 *
 */
function _update_laptop_location_from_edoovillage($node) {

  // Get destination project
  $query = "SELECT field_edoovillage_destination_target_id 
            FROM field_data_field_edoovillage_destination WHERE entity_id=$node->nid";
  $edoovillageId = db_query($query)->fetchField();

  // Get the location id of the destination project
  $query = "SELECT lid FROM location_instance project 
            WHERE vid=(SELECT MAX(vid) FROM location_instance WHERE nid=project.nid) AND (nid=$edoovillageId)";
  $edoovillageLid = db_query($query)->fetchField();

  // Update the location of the laptop to be that of the destination project
  $query = "SELECT vid FROM location_instance project 
            WHERE vid=(SELECT MAX(vid) FROM location_instance WHERE nid=project.nid) AND (nid=$node->nid)";
  $laptopVid = db_query($query)->fetchField();
  $query ="UPDATE location_instance SET lid=$edoovillageLid WHERE vid=$laptopVid AND nid=$node->nid";
  $result = db_query($query);
  drupal_set_message(t('The location of this dooject has been automatically assigned to the location of its edoovillage.'));

  return;
}


/**
 * Implementation of hook_node_update
 *
 */
function labdoo_lib_node_update($node) {

  if($node->type == 'laptop') {

    /*
     * Automatically update the location of a dooject
     * to match that of its assigned edoovillage for states
     * T1 or S4.
     */
    $doojectStatus = $node->field_status['und'][0]['value'];
    if($doojectStatus == "T1" || $doojectStatus == "S4") {
      // Use a PHP shutdown callback (invoked upon exiting the PHP thread)
      // because this appears to be the only way to make sure the node 
      // has been stored in the database prior to updating the location
      register_shutdown_function('_update_laptop_location_from_edoovillage', $node);
   }

  }

  return;
}


/**
 * Implementation of hook_node_presave
 *
 */
function labdoo_lib_node_presave($node) {

  if($node->type == 'edoovillage') {
    /*
     * Update title in case any of its parts was modified
     */
    $countryNames = location_get_iso3166_list();
    $nodeCountry = $countryNames[$node->locations[0]['country']];
    $nodeCity = $node->locations[0]['city'];
    $node->title = $nodeCountry . ", " . $nodeCity . ": " . $node->field_project_summary['und'][0]['value'];
  }

}


/**
 * Implementation of hook_form_node_form_alter
 *
 */
function labdoo_lib_form_node_form_alter(&$form, &$form_state, $form_id) {
  global $user;

  /*
   * Node is a laptop
   */
  if($form_id == 'laptop_node_form') {

    /*
     * Hide the title from the form
     * so that users can't write to it.
     * That's done because the title is
     * programmatically given the value of
     * the laptop's Labdoo ID
     */
    unset($form['title']);

    /*
     * Defaults for node creation
     */
    $node = $form_state['node'];
    if (!isset($node->nid) || isset($node->is_new)) {
      if(empty($form['field_tagger']['und'][0]['target_id']['#default_value'])) {    
        $form['field_tagger']['und'][0]['target_id']['#default_value'] = $user->name . " (" . $user->uid . ")";
        $form['field_manager']['und'][0]['target_id']['#default_value'] = $user->name . " (" . $user->uid . ")";
      }
    }
  }

  /*
   * Node is a dootrip
   */
  if($form_id == 'dootrip_node_form') {

    // Hide title
    unset($form['title']);

    /*
     * Defaults for node creation
     */
    $node = $form_state['node'];
    if (!isset($node->nid) || isset($node->is_new)) {
      if(empty($form['field_dootripper_s_']['und'][0]['target_id']['#default_value'])) {    
        $form['field_dootripper_s_']['und'][0]['target_id']['#default_value'] = $user->name . " (" . $user->uid . ")";
      }
    }

  }

  /*
   * Node is an edoovillage
   */
  if($form_id == 'edoovillage_node_form') {

    // Hide title
    unset($form['title']);

  }

  /*
   * Node is a hub
   */
  if($form_id == 'hub_node_form') {

//    // Hide title
//    unset($form['title']);

  }

}


/** 
 * Calculates the number of objects for each city
 * 
 * @return An array indexed by the name of the city in capital letters
 * and with various fields: 
 *
 *   'count': The number of doojects in the city
 *     'lat': The latitude of the city
 *     'lon': The longitude of the city
 * 'country': The country of the city 
 *  
 */ 
function labdoo_getnum_objects_by_city($type) {

  $country_names = location_get_iso3166_list();

//  $query = "SELECT nid, vid FROM node object WHERE (type='$type' AND vid=(SELECT MAX(vid) FROM node WHERE nid=object.nid))";
  $query = "SELECT nid, vid FROM node WHERE type='$type'";
  $doojects = db_query($query);

  foreach($doojects as $dooject) {

    $query = "SELECT lid FROM location_instance WHERE nid=$dooject->nid AND vid=$dooject->vid";
    $loc = db_query($query)->fetchField();
    $query = "SELECT city, country FROM location WHERE lid=$loc";
    $city = db_query($query)->fetchObject()->city;
    $country = db_query($query)->fetchObject()->country;
    $query = "SELECT latitude, longitude FROM location WHERE lid=$loc";
    $lat = db_query($query)->fetchObject()->latitude;
    $lon = db_query($query)->fetchObject()->longitude;

    if(array_key_exists($country, $country_names))
        $countryExt = $country_names[$country];
    else 
        $countryExt = $country;

    if(!isset($doojectsCount[strtoupper($city)]))
    {
      $doojectsCount[strtoupper($city)]['count'] = 0;
      $doojectsCount[strtoupper($city)]['lat'] = $lat;
      $doojectsCount[strtoupper($city)]['lon'] = $lon;
      $doojectsCount[strtoupper($city)]['country'] = $countryExt;
    }

    $doojectsCount[strtoupper($city)]['count']++;
    $doojectsCount[strtoupper($city)]['city'] = $city;

  } 

  return $doojectsCount;
}

/**
 * Calculates the total number of doojects
 * in demand from the list of edoovillages
 *
 * @param edoovillageId node ID of the edoovillage we want to find the demand for 
 * @param hubId node ID of the hub we want to find the demand for 
 * @param $doAverage calculate the fair share of demand that a hub should take
 * for each edoovillage, understood as demand divided by the number of hubs
 * taking care of that edoovillage
 *
 */
function labdoo_get_demand($edoovillageId, $hubId, $doAverage) {

  if($doAverage) {

    if($hubId) {

      $query = "SELECT SUM(b.field_number_of_laptops_needed_value / a.numberHubs) 
                FROM 
                  (SELECT COUNT(*) numberHubs, entity_id 
                    FROM field_data_field_hub WHERE entity_id IN (SELECT entity_id 
                      FROM field_data_field_hub WHERE field_hub_target_id=$hubId) GROUP BY entity_id) a 
                INNER JOIN 
                  (SELECT entity_id, field_number_of_laptops_needed_value 
                    FROM field_data_field_number_of_laptops_needed  WHERE entity_id IN (SELECT entity_id 
                      FROM field_data_field_hub WHERE field_hub_target_id=$hubId)) b ON a.entity_id = b.entity_id";

    }
    else {

      // TODO: not implemented yet
      return -1;

    }

  }

  else {

    if($hubId) {
 
      $query = "SELECT SUM(field_number_of_laptops_needed_value) 
                FROM field_data_field_number_of_laptops_needed 
                WHERE entity_id IN (SELECT entity_id 
                FROM field_data_field_hub WHERE field_hub_target_id=$hubId)"; 

    }

    else if($edoovillageId) {

      $query = "SELECT SUM(field_number_of_laptops_needed_value) 
                FROM field_data_field_number_of_laptops_needed WHERE entity_id=$edoovillageId"; 

    }

    else {

      $query = "SELECT SUM(field_number_of_laptops_needed_value) FROM field_data_field_number_of_laptops_needed"; 

    }

  }

  $numLaptops = db_query($query)->fetchField();

  return $numLaptops;
}


/** 
 *
 * Calculates the number of doojects assigned 
 * to a hub in a give state
 * 
 */ 
function labdoo_getnum_doojects($edoovillageId, $hubId, $status) {

  $country_names = location_get_iso3166_list();

  if($hubId) 
    $query = "SELECT COUNT(*) FROM field_data_field_status WHERE field_status_value='$status' AND entity_id IN (SELECT entity_id FROM field_data_field_hub_laptop WHERE field_hub_laptop_target_id=$hubId)"; 
  else if($edoovillageId)
    $query = "SELECT COUNT(*) FROM field_data_field_status WHERE field_status_value='$status' AND entity_id IN (SELECT entity_id FROM field_data_field_edoovillage_destination WHERE field_edoovillage_destination_target_id=$edoovillageId)"; 
  else
    $query = "SELECT COUNT(*) FROM field_data_field_status WHERE field_status_value='$status'"; 

  $numLaptops = db_query($query)->fetchField();

  return $numLaptops;
}


/**
 * Returns the title of a node
 *
 * @param nodeid The ID of a node
 *
 * @return The title of the node 
 * 
 */
function lbd_nodeid2title($nodeid)
{
    $title = db_query("SELECT title FROM node WHERE nid = :nid ", array(':nid' => $nodeid))->fetchField();
    return $title; 
}

