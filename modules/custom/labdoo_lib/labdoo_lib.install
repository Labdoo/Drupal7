<?php

/**
 * @file
 * Installation file for the Labdoo Library module
 *
 * @ingroup labdoolib 
 */


/**
 *
 * Creates the Labdoo front page
 */
function lbd_create_front_page_node()
{

  // TODO: it's better to use print(render()) instead of using the #markup field
  $bodyText = "
<?php 
global \$language;
\$defaultLanguage = language_default();
print(\"<img src='/profiles/labdoo/files/pictures/labdoo-header.png' width='1500'>\");
print(\"<img src='/profiles/labdoo/files/pictures/labdoo-slogan.png' width='600'>\");
\$blockFeed = module_invoke('views', 'block_view', 'actions-block');
\$blockFlexSlide = module_invoke('views', 'block_view', 'labdoo_slideshow-block');
print(\"<br><br>\");
print(labdoo_render_macro_stats('horizontal', \$addTitle=True));
print(\$blockFeed['content']['#markup']);
print(\$blockFlexSlide['content']['#markup']);
print(\"<p align='center'>\");
\$langCode = '';
if(\$language->language != \$defaultLanguage->language)
  \$langCode = '/' . \$language->language;
if(!user_is_logged_in())
  print(\"<a href='\$langCode/user/login'><img src='/profiles/labdoo/files/pictures/button-join-labdoo.png' width='200'></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\");
print(\"<a href='\$langCode/content/labdoo-nutshell'><img src='/profiles/labdoo/files/pictures/button-learn-how-it-works.png' width='300'></a>\");
print(\"</p>\");
?>
  ";

  $node = new stdClass();
  $node->type = 'page';
  node_object_prepare($node);
  
  $node->title = "Front Page";
  $node->language = LANGUAGE_NONE;

  $node->body[$node->language][0]['value']   = $bodyText;
  $node->body[$node->language][0]['summary'] = '';
  $node->body[$node->language][0]['format']  = 'php_code';
  
  $node->path = array('alias' => "content/front-page");

  node_save($node);
}


/**
 *
 * Creates the user's share wall 
 */
function lbd_create_my_share_wall()
{

  $bodyText = "
<?php
\$myStatus = module_invoke('drupal_wall', 'block_view', 'drupal_wall');
\$shareWall = module_invoke('drupal_wall', 'block_view', 'drupal_wall_view');
print render(\$myStatus['content']);
print render(\$shareWall['content']);
?>
";

  $node = new stdClass();
  $node->type = 'private_page';
  node_object_prepare($node);
  
  $node->title = "Share Wall";
  $node->language = LANGUAGE_NONE;

  $node->body[$node->language][0]['value']   = $bodyText;
  $node->body[$node->language][0]['summary'] = '';
  $node->body[$node->language][0]['format']  = 'php_code';
  
  $node->path = array('alias' => "content/my-share-wall");

  node_save($node);
}


/**
 *
 * Creates a node to generate dooject tags 
 */
function lbd_create_tag_dooject_node()
{

  $bodyText = "<?php lbd_print_dooject_labels(\$_GET['id']); ?>";

  $node = new stdClass();
  $node->type = 'page';
  node_object_prepare($node);
  
  $node->title = "";
  $node->language = LANGUAGE_NONE;

  $node->body[$node->language][0]['value']   = $bodyText;
  $node->body[$node->language][0]['summary'] = '';
  $node->body[$node->language][0]['format']  = 'php_code';
  
  $node->path = array('alias' => "content/tag-one-dooject");

  node_save($node);
}


/**
 *
 * Creates a node to follow a dooject 
 */
function lbd_create_follow_dooject_node()
{

  $bodyText = "
<?php 
\$dooject = '';
\$usr = '';
\$follow = '';
\$dooject = \$hub = NULL;
if(!empty(\$_GET['d'])) \$dooject = \$_GET['d'];
if(!empty(\$_GET['u'])) \$usr = \$_GET['u'];
else {global \$user; \$usr = \$user->uid;}
if(!empty(\$_GET['f'])) \$follow = \$_GET['f'];
labdoo_follow_dooject(\$dooject, \$usr, \$follow);
?>
  ";

  $node = new stdClass();
  $node->type = 'private_page';
  node_object_prepare($node);
  
  $node->title = "Follow a dooject";
  $node->language = LANGUAGE_NONE;

  $node->body[$node->language][0]['value']   = $bodyText;
  $node->body[$node->language][0]['summary'] = '';
  $node->body[$node->language][0]['format']  = 'php_code';
  
  $node->path = array('alias' => "content/follow-dooject");

  node_save($node);
}


/**
 * Deletes the front page 
 *
 */
function lbd_delete_front_page_node()
{
  $path = drupal_lookup_path("source", "content/front-page"); 
  $node = menu_get_object("node", 1, $path);
  node_delete($node->nid);
}


/**
 * Deletes the user's share wall 
 *
 */
function lbd_delete_my_share_wall()
{
  $path = drupal_lookup_path("source", "content/my-share-wall"); 
  $node = menu_get_object("node", 1, $path);
  node_delete($node->nid);
}


/**
 * Deletes the node to tag doojects 
 *
 */
function lbd_delete_tag_dooject_node()
{
  $path = drupal_lookup_path("source", "content/tag-one-dooject"); 
  $node = menu_get_object("node", 1, $path);
  node_delete($node->nid);
}


/**
 * Deletes the node to follow doojects 
 *
 */
function lbd_delete_follow_dooject_node()
{
  $path = drupal_lookup_path("source", "content/follow-dooject"); 
  $node = menu_get_object("node", 1, $path);
  node_delete($node->nid);
}


/**
 * Implements hook_enable
 *
 */
function labdoo_lib_enable()
{
  // Create some initial basic nodes
  lbd_create_front_page_node();
  lbd_create_tag_dooject_node(); 
  lbd_create_follow_dooject_node();
  lbd_create_my_share_wall();

  // Set front page
  variable_set('site_frontpage', 'content/front-page'); 

  // Set capability to login via email besides user name
  variable_set('logintoboggan_login_with_email', 1);

  // Set default user account picture
  variable_set('user_picture_default', '/sites/default/files/content/general-objects/act-5-small.png');

  // Photo albums
  variable_set('colorbox_load', 1);
  variable_set('image_toolkit', 'imagemagick');
  variable_set('imagemagick_convert', '/usr/bin/convert');

  // search
  variable_set(search_active_modules, array('node'));

  // Newsletter
  variable_set('simplenews_test_address_override', 1);

  // Multi-language
  variable_set('i18n_node_default_language_none', 1);

  // String overrides
  $custom_strings = array(
    ''=>array( //context is blank
        'This action cannot be undone.' => ''// blanking the string hides it
//      ,
//      'Another old string.' => 'New String'
    )
  );
  variable_set('locale_custom_strings_en', $custom_strings);   //note, this is only for english language
  // Note: In order to ensure all languages are properly replaced, 
  // the above needs to be complemented with a translation po file 
  // which takes care of the strings replaced aboved in all the 
  // supported languages.

  // Language switcher dropdown
  $langSwitcher = variable_get('lang_dropdown_language');
  $langSwitcher['width'] = 120;
  variable_set('lang_dropdown_language', $langSwitcher);

  drupal_set_message("labdoo_lib enabled correctly");
}


/**
 * Implements hook_disable
 *
 */
function labdoo_lib_disable()
{
  lbd_delete_my_share_wall();
  lbd_delete_front_page_node();
  lbd_delete_tag_dooject_node();
  lbd_delete_follow_dooject_node();
  drupal_set_message("labdoo_lib disabled correctly");
}

