<?php

/**
 * @defgroup labdooteam labdooTeam: Implementation of Labdoo Teams
 *
 * This module implements Labdoo Teams based on Organic Groups and other basic building blocks
 *
 */


/**
 * @file
 * Main file for the Labdoo Team module
 *
 * @ingroup labdooteam 
 */


/*
 * ==========
 * VIEWS CODE
 * ==========
 */

/**
 * Implementation of hook_views_api
 */
function lbd_teams_views_api() {
  return array(
    'api' => 3.0,
  );
} 


/**
 * Implementation of hook_views_default_views
 */
function lbd_teams_views_default_views() {

  // Teams view
  include 'lbd_teams_views_teams.inc';
  $views[$view->name] = $view;

  // User's teams view
  include 'lbd_teams_views_user_teams.inc';
  $views[$view->name] = $view;

  // Team content in a block
  include 'lbd_teams_views_team_content_block.inc';
  $views[$view->name] = $view;

  // Team content in a page 
  include 'lbd_teams_views_team_content_page.inc';
  $views[$view->name] = $view;

  // All teams content in a page
  include 'lbd_teams_views_content_page.inc';
  $views[$view->name] = $view;

  // Calendars
  include 'lbd_teams_views_calendar.inc';
  $views[$view->name] = $view;

  // Team dashboard
  include 'lbd_teams_views_dashboard.inc';
  $views[$view->name] = $view;

  return $views;
}


/**
 * render_calendar_switcher 
 *
 */
function render_calendar_switcher()
{
  global $language;

  if ($language->language != 'en')
    $lang = '/' . $language->language;
  else
    $lang = '';

  $path = drupal_get_path_alias(current_path());
    
  if(stripos($path, "calendar/month")) {
      $url0 = "Month";
      $url1 = "Week";
      $url2 = "Day";
      $url3 = "Year";
  }

  if(stripos($path, "calendar/week")) {
      $url0 = "Week";
      $url1 = "Month";
      $url2 = "Day";
      $url3 = "Year";
  }

  if(stripos($path, "calendar/day")) {
      $url0 = "Day";
      $url1 = "Month";
      $url2 = "Week";
      $url3 = "Year";
  }
    
  if(stripos($path, "calendar/year")) {
      $url0 = "Year";
      $url1 = "Month";
      $url2 = "Week";
      $url3 = "Day";
  }

  $switchTitle = t('Select calendar view');

  $code = "<p><strong><span style='color:#ff3300;'>$switchTitle</span></strong></p>
           <form>
           <select name='URL' onchange='window.location.href=this.form.URL.options[this.form.URL.selectedIndex].value'>
           <option value='$lang/$path/../$url0'>$url0</option>
           <option value='$lang/$path/../$url1'>$url1</option>
           <option value='$lang/$path/../$url2'>$url2</option>
           <option value='$lang/$path/../$url3'>$url3</option>
           </select>
           </form>";

  print($code);
  return;
}


/**
 * Implementation of hook_node_validate 
 */
function lbd_teams_node_validate($node, $form, &$form_state) {

  if ($node->type == 'team_task') {
    $items = field_get_items('node', $node, 'field_task_assigned_to');
    $userId = $items[0]['target_id'];
    if(!$userId)
      return; // Let the general validation routine take care of this 
    $items = field_get_items('node', $node, 'og_group_ref');
    $groupId = $items[0]['target_id'];
    if(!$groupId)
      return; // Let the general validation routine take care of this 
    $userNode = user_load($userId);
    if (!og_is_member('node', $groupId, 'user', $userNode)) {
      form_set_error('field_task_assigned_to', t("Please ensure that the user assigned to this task is a member of the task's team"));
    }
  }

  return;
} 


/**
 * Returns the group ID of the page being displayed, if any
 *
 * @return The group ID or NULL if the page is not associated with any group ID 
 *
 */
function lbd_teams_page_group_id() {

  if(!empty($_GET['og_group_ref'])) 
    $groupId = $_GET['og_group_ref'];
  else {
    if (arg(0) != 'node' || !is_numeric(arg(1))) 
      return NULL;
    $groupId = arg(1);
    $node = node_load($groupId);
    if($node->type != "team" and $node->type != "team_page" and $node->type != "event" and $node->type != "team_task") 
      return NULL;
    if($node->type != "team"){
      $items = field_get_items('node', $node, 'og_group_ref');
      $groupId = $items[0]['target_id'];
    }
  }
  return $groupId;
}


/**
 * Renders the team actions block 
 *
 * @return Code rendering the team actions block
 *
 */
function labdoo_render_team_actions() {
  global $language;

  $groupId = lbd_teams_page_group_id();

  if ($language->language != 'en')
    $lang = '/' . $language->language;
  else
    $lang = '';

  $homePath = $lang . "/" . drupal_get_path_alias("node/$groupId");

  $code = "
<p><strong><span style='color:#009900; font-size:16px;'>Team " . lbd_nodeid2title($groupId) . "</span></strong></p>
<img src='/profiles/labdoo/files/pictures/home.png' style='width: 20px; height: 21px;'/>&nbsp;
<a href='$homePath'>" . t("Team's home page") . "</span></a></p>
<img src='/profiles/labdoo/files/pictures/conversation.png' style='width: 20px; height: 21px;'/>&nbsp;
<a href='$lang/node/add/team-page?og_group_ref=$groupId'>" . t("Start conversation") . "</span></a></p>
<img src='/profiles/labdoo/files/pictures/check.png' style='width: 20px; height: 21px;'/>&nbsp;
<a href='$lang/node/add/team-task?og_group_ref=$groupId'>" . t("Start task") . "</span></a></p>
<img src='/profiles/labdoo/files/pictures/community.png' style='width: 20px; height: 21px;'/>&nbsp;
<a href='$lang/node/add/event?og_group_ref=$groupId'>" . t("Start event") . "</span></a></p>
<img src='/profiles/labdoo/files/pictures/wall.png' style='width: 20px; height: 21px;'/>&nbsp;
<a href='$lang/node/$groupId/activities'>" . t("View wall") . "</span></a></p>
<img src='/profiles/labdoo/files/pictures/calendar_icon.png' style='width: 20px; height: 21px;'/>&nbsp;
<a href='$lang/node/$groupId/calendar/month'>" . t("View calendar") . "</span></a></p>
<br>
  ";

  return $code;
}


/**
 * Implements the visibility filter of the team actions block 
 *
 * @return TRUE if the block is to be displayed, FALSE otherwise
 *
 */
function labdoo_block_filter_team_actions() {
  global $user;

  $groupId = lbd_teams_page_group_id();

  if($groupId == NULL)
    return FALSE;

  if(!og_is_member('node', $groupId))
    return FALSE;

  return TRUE;
}

