* License

  All of Labdoo's source code is released under GPL version 3 or later.

* Installation in development mode

  The recommended way of installation is to build a new server from
  scratch, inside a chroot environment.

  + Get a copy of the project from GitHub:
    #+BEGIN_EXAMPLE
    mkdir /var/chroot
    cd /var/chroot/
    git clone https://github.com/Labdoo/Labdoo-2.0.git labdoo
    #+END_EXAMPLE

  + If you intend to build the master branch, skip the following step:
    #+BEGIN_EXAMPLE
    cd labdoo/
    git checkout $NAME_OF_THE_BRANCH
    cd ../
    #+END_EXAMPLE

  + Modify and customize the settings:
    #+BEGIN_EXAMPLE
    cp labdoo/install/settings.sh labdoo/cfg.sh
    vim labdoo/cfg.sh # Make any necessary changes
    #+END_EXAMPLE

  + Install the project inside a chroot system:
    #+BEGIN_EXAMPLE
    time nohup nice labdoo/install/chroot.sh labdoo/cfg.sh &
    tail -f nohup.out
    less -r nohup.out
    #+END_EXAMPLE

    The above process can take some time, depending on bandwidth and your computer speed.
    On an Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz it takes about 12 minutes:

    #+BEGIN_EXAMPLE
    real 11m9.292s
    user 6m31.217s
    sys  0m59.728s
    #+END_EXAMPLE

  + Make sure to include the following lines in your /etc/hosts file (outside the chroot):

    #+BEGIN_EXAMPLE
    127.0.0.1       www.labdoo-dev.org localhost
    #+END_EXAMPLE

  + Start the Labdoo social network: 
    #+BEGIN_EXAMPLE
    service chroot-lbd start
    #+END_EXAMPLE

  + And that's it! You can now access your Labdoo installation
    by opening your web browser and opening the URL https://www.labdoo-dev.org/. Please use https
    protocol (instead of http) since currently the theme only works properly on https. (Notice
    that you will need to confirm the security exception on your browser the first time you
    access https://www.labdoo-dev.org/)

  + If you need to stop Labdoo you can do: =service chroot-lbd stop=
  
  + If you need to start again Labdoo you can do: =service chroot-lbd start=

* Installation in production mode

  A development Labdoo node can be converted into a production node by following the next steps:

  + Drop (1) the server certificate, (2) the intermediate certificate (chain certificate) and (3) private key 
    to the folders /etc/ssl/certs/ and /etc/ssl/private/,
    respectively.

  + Modify the file /etc/apache2/sites-enabled/lbd-ssl.conf so that SSLCertificateFile, SSLCertificateChainFile and
    SSLCertificateKeyFile point to the certificate, chain certificate and private key, respectively.

  + Modify both /etc/apache2/sites-enabled/lbd-ssl.conf and /etc/apache2/sites-enabled/lbd.conf
    so that all URL and email address information points to www.labdoo.org and contact@labdoo.org
    (or to your chosen values for these parameters), respectively. 

  + If you want to disable the SSL password prompt upon restarting apache, add the following two lines
    to the beginning of the file /usr/share/apache2/ask-for-passphrase: 
    #+BEGIN_EXAMPLE
    echo $PASSPHRASE_LITERAL
    exit
    #+END_EXAMPLE

  + Modify /etc/hosts so that the localhost points to www.labdoo.org.

  + Modify the file /var/www/lbd/sites/default/settings.php so that $base_url points 
    to https://www.labdoo.org.

* Installation in a docker container

  This is almost the same as the installation above, except that instead of ~install/chroot.sh~
  you call ~install/docker.sh~:
  #+BEGIN_EXAMPLE
  nohup time nice labdoo/install/docker.sh labdoo/cfg.sh &
  #+END_EXAMPLE

  Then to stop and start Labdoo you do: =docker.io stop lbd= and =docker.io start lbd=.


** Building with docker

   Another way is to use the command =docker build= to build an image
   and then =docker run= to create a container from this image:
   #+BEGIN_EXAMPLE
   vim labdoo/install/settings.sh
   docker.io build --tag=labdoo labdoo/
   docker.io run -d --name=lbd --hostname=example.org -p 80:80 -p 443:443 labdoo
   #+END_EXAMPLE

  Installation is done inside a Docker container. For instructions
  about installing Docker see: https://docs.docker.com/installation/

  + Create a working directory:
    #+BEGIN_EXAMPLE
    mkdir workdir/
    #+END_EXAMPLE

  + Link the docker directory inside the working directory: 
    #+BEGIN_EXAMPLE
    cd workdir/
    ln -s ../myproject/docker .
    #+END_EXAMPLE

  + Modify and customize the settings:
    #+BEGIN_EXAMPLE
    cp docker/settings.sh .
    vim settings.sh
    #+END_EXAMPLE

  + Build a Docker image:
    #+BEGIN_EXAMPLE
    docker/build.sh settings.sh
    tail -f logs/nohup-myproject-master-20150929.out
    less -r logs/nohup-myproject-master-20150929.out
    #+END_EXAMPLE
    This will create a docker image, named =myproject:master= with a
    minimal ubuntu system and everything that is needed for the normal
    work of the Drupal application.

  + Create a Docker container like this:
    #+BEGIN_EXAMPLE
    docker/create.sh
    #+END_EXAMPLE
    It will create a container with port forwarding like this: =-p
    80:80 -p 443:443 -p 2201:2201=. If you don't like the default port
    forwarding, edit ~config~ and modify it, before creating the
    container.

  + Now you can start and stop the container with =docker/start.sh=
    and =docker/stop.sh=, enter the shell of the container with
    =docker/enter.sh=, etc.

  + If =development=true= is set on the settings, then the code of the
    application inside the container will be linked to the directory
    ~myproject/~, so that you can edit and work on it easily.

  + If it is installed on a local machine (for testing or
    development), add the domain name =example.org= on ~/etc/hosts~,
    like this:
    #+BEGIN_EXAMPLE
    127.0.0.1 example.org
    #+END_EXAMPLE
    This way it can be accessed by typing =https://example.org= on the
    browser location (not =https://127.0.0.1= or =https://localhost=).


* Documentation

  + [[https://github.com/Labdoo/Labdoo-2.0/blob/master/README.org][README.org]] (this file)
  + [[https://github.com/Labdoo/Labdoo-2.0/blob/master/dev/README.org][dev/README.org]] (tips for developers)
  + [[https://github.com/Labdoo/Labdoo-2.0/blob/master/modules/features/README.org][modules/features/README.org]]

